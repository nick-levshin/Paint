[{"/home/nick-levhsin/Programming/Paint/client/src/index.tsx":"1","/home/nick-levhsin/Programming/Paint/client/src/components/AppRouter.tsx":"2","/home/nick-levhsin/Programming/Paint/client/src/components/App.tsx":"3","/home/nick-levhsin/Programming/Paint/client/src/components/SettingBar.tsx":"4","/home/nick-levhsin/Programming/Paint/client/src/components/Canvas.tsx":"5","/home/nick-levhsin/Programming/Paint/client/src/components/Toolbar.tsx":"6","/home/nick-levhsin/Programming/Paint/client/src/store/canvasState.ts":"7","/home/nick-levhsin/Programming/Paint/client/src/store/toolState.ts":"8","/home/nick-levhsin/Programming/Paint/client/src/tools/Circle.ts":"9","/home/nick-levhsin/Programming/Paint/client/src/tools/Eraser.ts":"10","/home/nick-levhsin/Programming/Paint/client/src/tools/Brush.ts":"11","/home/nick-levhsin/Programming/Paint/client/src/tools/Line.ts":"12","/home/nick-levhsin/Programming/Paint/client/src/tools/Rect.ts":"13","/home/nick-levhsin/Programming/Paint/client/src/tools/Tool.ts":"14"},{"size":280,"mtime":1662114052213,"results":"15","hashOfConfig":"16"},{"size":501,"mtime":1662114052213,"results":"17","hashOfConfig":"16"},{"size":323,"mtime":1662114052213,"results":"18","hashOfConfig":"16"},{"size":784,"mtime":1662114052213,"results":"19","hashOfConfig":"16"},{"size":4674,"mtime":1662729753329,"results":"20","hashOfConfig":"16"},{"size":2923,"mtime":1662646612960,"results":"21","hashOfConfig":"16"},{"size":2144,"mtime":1662121566004,"results":"22","hashOfConfig":"16"},{"size":634,"mtime":1662114052213,"results":"23","hashOfConfig":"16"},{"size":2529,"mtime":1662644355618,"results":"24","hashOfConfig":"16"},{"size":500,"mtime":1662114052213,"results":"25","hashOfConfig":"16"},{"size":1642,"mtime":1662645104424,"results":"26","hashOfConfig":"16"},{"size":1555,"mtime":1662462796708,"results":"27","hashOfConfig":"16"},{"size":2610,"mtime":1662644758996,"results":"28","hashOfConfig":"16"},{"size":792,"mtime":1662461635515,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1d9cl4x",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/home/nick-levhsin/Programming/Paint/client/src/index.tsx",[],[],[],"/home/nick-levhsin/Programming/Paint/client/src/components/AppRouter.tsx",[],[],"/home/nick-levhsin/Programming/Paint/client/src/components/App.tsx",[],[],"/home/nick-levhsin/Programming/Paint/client/src/components/SettingBar.tsx",[],[],"/home/nick-levhsin/Programming/Paint/client/src/components/Canvas.tsx",["74","75"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/canvas.scss';\nimport { observer } from 'mobx-react-lite';\nimport canvasState from '../store/canvasState';\nimport toolState from '../store/toolState';\nimport Brush from '../tools/Brush';\nimport Rect from '../tools/Rect';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport { Msg } from '../types/msg';\nimport Circle from '../tools/Circle';\n\nconst Canvas: React.FC = observer(() => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const usernameRef = useRef<HTMLInputElement>(null);\n  const [modal, setModal] = useState(true);\n  const params = useParams();\n\n  useEffect(() => {\n    canvasState.setCanvas(canvasRef.current);\n    const ctx = canvasRef.current?.getContext('2d');\n    axios\n      .get(`http://localhost:5000/image?id=${params.id}`)\n      .then((res) => {\n        const img = new Image();\n        img.src = res.data;\n        img.onload = () => {\n          ctx?.clearRect(\n            0,\n            0,\n            canvasRef.current?.width as number,\n            canvasRef.current?.height as number\n          );\n\n          console.log(img);\n\n          ctx?.drawImage(\n            img,\n            0,\n            0,\n            canvasRef.current?.width as number,\n            canvasRef.current?.height as number\n          );\n        };\n      })\n      .catch((e) => console.log(e));\n  }, []);\n\n  useEffect(() => {\n    if (canvasState.username) {\n      const socket = new WebSocket('ws://localhost:5000/');\n      canvasState.setSocket(socket);\n      canvasState.setSessionId(params.id as string);\n\n      toolState.setTool(\n        new Brush(\n          canvasRef.current as HTMLCanvasElement,\n          socket,\n          params.id as string\n        )\n      );\n\n      socket.onopen = () => {\n        socket.send(\n          JSON.stringify({\n            id: params.id,\n            username: canvasState.username,\n            method: 'connection',\n          })\n        );\n      };\n      socket.onmessage = (event) => {\n        let msg = JSON.parse(event.data);\n        switch (msg.method) {\n          case 'connection':\n            console.log(`User ${msg.username} connected`);\n            break;\n\n          case 'draw':\n            drawHandler(msg);\n            break;\n        }\n      };\n    }\n  }, [canvasState.username]);\n\n  const drawHandler = (msg: Msg) => {\n    const figure = msg.figure;\n    const ctx = canvasRef.current?.getContext('2d') as CanvasRenderingContext2D;\n\n    if (figure?.type) {\n      switch (figure.type) {\n        case 'brush':\n          Brush.draw(\n            ctx as CanvasRenderingContext2D,\n            figure.x,\n            figure.y,\n            figure.color\n          );\n          break;\n\n        case 'rect':\n          Rect.staticDraw(\n            ctx as CanvasRenderingContext2D,\n            figure.x,\n            figure.y,\n            figure?.width as number,\n            figure?.height as number,\n            figure.color\n          );\n          break;\n\n        case 'circle':\n          Circle.staticDraw(\n            ctx as CanvasRenderingContext2D,\n            figure.x,\n            figure.y,\n            figure?.radius as number,\n            figure.color\n          );\n          break;\n\n        case 'finish':\n          ctx.beginPath();\n          break;\n      }\n    }\n  };\n\n  const mouseDownHandler = () => {\n    canvasState.pushToUndo(\n      (canvasRef.current as HTMLCanvasElement).toDataURL()\n    );\n  };\n\n  const mouseUpHandler = () => {\n    axios\n      .post(`http://localhost:5000/image?id=${params.id}`, {\n        img: canvasRef.current?.toDataURL(),\n      })\n      .then((res) => console.log(res.data));\n  };\n\n  const connectHandler = () => {\n    canvasState.setUsername((usernameRef.current as HTMLInputElement).value);\n    setModal(false);\n  };\n\n  return (\n    <>\n      <div className=\"canvas\">\n        <Modal show={modal} onHide={() => setModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Your name</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form.Control ref={usernameRef} />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={() => connectHandler()}>\n              Connect\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <canvas\n          ref={canvasRef}\n          width={600}\n          height={400}\n          onMouseDown={mouseDownHandler}\n          onMouseUp={mouseUpHandler}\n        ></canvas>\n      </div>\n    </>\n  );\n});\n\nexport default Canvas;\n","/home/nick-levhsin/Programming/Paint/client/src/components/Toolbar.tsx",[],[],"/home/nick-levhsin/Programming/Paint/client/src/store/canvasState.ts",[],[],"/home/nick-levhsin/Programming/Paint/client/src/store/toolState.ts",[],[],"/home/nick-levhsin/Programming/Paint/client/src/tools/Circle.ts",[],[],"/home/nick-levhsin/Programming/Paint/client/src/tools/Eraser.ts",[],[],"/home/nick-levhsin/Programming/Paint/client/src/tools/Brush.ts",[],[],"/home/nick-levhsin/Programming/Paint/client/src/tools/Line.ts",[],[],"/home/nick-levhsin/Programming/Paint/client/src/tools/Rect.ts",[],[],"/home/nick-levhsin/Programming/Paint/client/src/tools/Tool.ts",[],[],{"ruleId":"76","severity":1,"message":"77","line":51,"column":6,"nodeType":"78","endLine":51,"endColumn":8,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":89,"column":6,"nodeType":"78","endLine":89,"endColumn":28,"suggestions":"81"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["82"],"React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array. Outer scope values like 'canvasState.username' aren't valid dependencies because mutating them doesn't re-render the component.",["83"],{"desc":"84","fix":"85"},{"desc":"84","fix":"86"},"Update the dependencies array to be: [params.id]",{"range":"87","text":"88"},{"range":"89","text":"88"},[1539,1541],"[params.id]",[2446,2468]]