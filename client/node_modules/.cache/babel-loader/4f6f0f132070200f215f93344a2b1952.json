{"ast":null,"code":"var _jsxFileName = \"/home/nick-levhsin/Programming/Paint/client/src/components/Canvas.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/canvas.scss';\nimport { observer } from 'mobx-react-lite';\nimport canvasState from '../store/canvasState';\nimport toolState from '../store/toolState';\nimport Brush from '../tools/Brush';\nimport { useParams } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Canvas = _s(observer(_c = _s(() => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const usernameRef = useRef(null);\n  const [modal, setModal] = useState(true);\n  const params = useParams();\n  useEffect(() => {\n    canvasState.setCanvas(canvasRef.current);\n  }, []);\n  useEffect(() => {\n    if (canvasState.username) {\n      const socket = new WebSocket('ws://localhost:5000/');\n      canvasState.setSocket(socket);\n      canvasState.setSessionId(params.id);\n      toolState.setTool(new Brush(canvasRef.current, socket, params.id));\n\n      socket.onopen = () => {\n        socket.send(JSON.stringify({\n          id: params.id,\n          username: canvasState.username,\n          method: 'connection'\n        }));\n      };\n\n      socket.onmessage = event => {\n        let msg = JSON.parse(event.data);\n\n        switch (msg.method) {\n          case 'connection':\n            console.log(`User ${msg.username} connected`);\n            break;\n\n          case 'draw':\n            drawHandler(msg);\n            break;\n        }\n      };\n    }\n  }, [canvasState.username]);\n\n  const drawHandler = msg => {\n    var _canvasRef$current;\n\n    const figure = msg.figure;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n\n    if (figure !== null && figure !== void 0 && figure.type) {\n      switch (figure.type) {\n        case 'brush':\n          Brush.draw(ctx, figure.x, figure.y);\n          break;\n\n        case 'finish':\n          Brush.draw(ctx, figure.x, figure.y);\n          break;\n      }\n    }\n  };\n\n  const mouseDownHandler = () => {\n    canvasState.pushToUndo(canvasRef.current.toDataURL());\n  };\n\n  const connectHandler = () => {\n    canvasState.setUsername(usernameRef.current.value);\n    setModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: modal,\n        onHide: () => setModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: usernameRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => connectHandler(),\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 600,\n        height: 400,\n        onMouseDown: mouseDownHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}, \"frpiFXrwApBwe8aIG91Eg0cuJTQ=\", false, function () {\n  return [useParams];\n})), \"frpiFXrwApBwe8aIG91Eg0cuJTQ=\", false, function () {\n  return [useParams];\n});\n\n_c2 = Canvas;\nexport default Canvas;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Canvas$observer\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","observer","canvasState","toolState","Brush","useParams","Button","Modal","Form","Canvas","canvasRef","usernameRef","modal","setModal","params","setCanvas","current","username","socket","WebSocket","setSocket","setSessionId","id","setTool","onopen","send","JSON","stringify","method","onmessage","event","msg","parse","data","console","log","drawHandler","figure","ctx","getContext","type","draw","x","y","mouseDownHandler","pushToUndo","toDataURL","connectHandler","setUsername","value"],"sources":["/home/nick-levhsin/Programming/Paint/client/src/components/Canvas.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/canvas.scss';\nimport { observer } from 'mobx-react-lite';\nimport canvasState from '../store/canvasState';\nimport toolState from '../store/toolState';\nimport Brush from '../tools/Brush';\nimport { useParams } from 'react-router-dom';\n\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport { Msg } from '../types/msg';\n\nconst Canvas: React.FC = observer(() => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const usernameRef = useRef<HTMLInputElement>(null);\n  const [modal, setModal] = useState(true);\n  const params = useParams();\n\n  useEffect(() => {\n    canvasState.setCanvas(canvasRef.current);\n  }, []);\n\n  useEffect(() => {\n    if (canvasState.username) {\n      const socket = new WebSocket('ws://localhost:5000/');\n      canvasState.setSocket(socket);\n      canvasState.setSessionId(params.id as string);\n\n      toolState.setTool(\n        new Brush(\n          canvasRef.current as HTMLCanvasElement,\n          socket,\n          params.id as string\n        )\n      );\n\n      socket.onopen = () => {\n        socket.send(\n          JSON.stringify({\n            id: params.id,\n            username: canvasState.username,\n            method: 'connection',\n          })\n        );\n      };\n      socket.onmessage = (event) => {\n        let msg = JSON.parse(event.data);\n        switch (msg.method) {\n          case 'connection':\n            console.log(`User ${msg.username} connected`);\n            break;\n\n          case 'draw':\n            drawHandler(msg);\n            break;\n        }\n      };\n    }\n  }, [canvasState.username]);\n\n  const drawHandler = (msg: Msg) => {\n    const figure = msg.figure;\n    const ctx = canvasRef.current?.getContext('2d');\n\n    if (figure?.type) {\n      switch (figure.type) {\n        case 'brush':\n          Brush.draw(ctx as CanvasRenderingContext2D, figure.x, figure.y);\n          break;\n\n        case 'finish':\n          Brush.draw(ctx as CanvasRenderingContext2D, figure.x, figure.y);\n          break;\n      }\n    }\n  };\n\n  const mouseDownHandler = () => {\n    canvasState.pushToUndo(\n      (canvasRef.current as HTMLCanvasElement).toDataURL()\n    );\n  };\n\n  const connectHandler = () => {\n    canvasState.setUsername((usernameRef.current as HTMLInputElement).value);\n    setModal(false);\n  };\n\n  return (\n    <>\n      <div className=\"canvas\">\n        <Modal show={modal} onHide={() => setModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Your name</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form.Control ref={usernameRef} />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={() => connectHandler()}>\n              Connect\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <canvas\n          ref={canvasRef}\n          width={600}\n          height={400}\n          onMouseDown={mouseDownHandler}\n        ></canvas>\n      </div>\n    </>\n  );\n});\n\nexport default Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}